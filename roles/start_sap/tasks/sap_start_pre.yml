---
#   Copyright 2022 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

###########################################
# tasks file for sap_start_pre
###########################################

###########################################
# Check SAP sid
###########################################

- name: Check if startsap_input_sap_sid variable is provided
  fail:
    msg: "Error: Input parameter startsap_input_sap_sid is required."
  when:  startsap_input_sap_sid is undefined

###########################################
# Check SAP Service
###########################################

- name: Search profile name for {{ startsap_input_sap_sid }} in /usr/sap/sapservices
  shell:  "grep {{ startsap_input_sap_sid }} /usr/sap/sapservices | grep -v '^ *#' | grep {{ item }} | cut -f2 -d' '"
  loop: "{{ startsap_ordered_list_instance_types}}"
  register: startsap_list_sap_services
  when: (startsap_list_sap_services is undefined) or (startsap_list_sap_services.stdout == "")

- name: Set variable for SAP service profile
  set_fact:
    startsap_list_sap_services: "{{ item.stdout }}"
  when: item.changed
  with_items: "{{ startsap_list_sap_services.results }}"

- name: Error if {{ startsap_input_sap_sid }} was not found in /usr/sap/sapservices
  fail:
    msg: "Error: System {{ startsap_input_sap_sid  }} does not exist."
  when: startsap_list_sap_services == ""

- name: Check  sap_nr {{ startsap_input_sap_instance_nr }}
  shell: "grep {{ startsap_input_sap_sid }} /usr/sap/sapservices | grep -v '^ *#' | grep {{ startsap_input_sap_instance_nr }} |cat"
  register: startsap_check_sap_instance
  when: startsap_input_sap_instance_nr is defined

- name: Error if {{ startsap_input_sap_instance_nr }} was not found
  fail:
    msg: "Error: Instance {{ startsap_input_sap_instance_nr }} for {{ startsap_input_sap_sid  }} does not exist."
  failed_when: startsap_check_sap_instance.stdout == ""
  when: startsap_input_sap_instance_nr is defined
  
###########################################
# Check if there is any running service
###########################################

- name: Get one instance number from profile name
  shell: grep -w 'SAPSYSTEM'  {{ startsap_list_sap_services.split()[0] |replace('pf=', '') }}
  register: startsap_input_sap_sid_profile

- name: Check if SAP service is active
  shell: "{{ startsap_dir_sapctrl_managednode }}/sapcontrol -nr {{ startsap_input_sap_sid_profile.stdout.split()[2] }} -function GetSystemInstanceList"
  environment:
    LIBPATH: "{{ startsap_dir_sapctrl_managednode }}"
  failed_when: startsap_output_list_inactive_services.rc >= 2
  register: startsap_output_list_inactive_services

- name: Fail if SAP Service cannot connect for sap_nr
  fail:
    msg: "GetSystemInstanceList Fail: NIECONN_REFUSED (Connection refused)"
  failed_when: "'FAIL' in startsap_output_list_inactive_services.stdout"

- name: Check if SAP instance is active
  shell: "{{ startsap_dir_sapctrl_managednode }}/sapcontrol -nr {{ startsap_input_sap_sid_profile.stdout.split()[2] }} -function GetSystemInstanceList |  grep {{ ansible_hostname }} | grep -i gray | sort -k 5n | grep {{ startsap_input_sap_instance_nr | default() }} | cat"
  environment:
    LIBPATH: "{{ startsap_dir_sapctrl_managednode }}"
  register: startsap_output_list_inactive_instances
  when:  startsap_input_sap_instance_nr is defined

- name: Fail if SAP Service already started for sap_nr
  fail:
    msg: "Error: No stopped SAP Instances found"
  failed_when: startsap_output_list_inactive_instances.stdout == ""
  when: startsap_input_sap_instance_nr is defined

- name: Fail if SAP Service cannot connect for sap_nr
  fail:
    msg: "GetSystemInstanceList Fail: NIECONN_REFUSED (Connection refused)"
  failed_when: startsap_output_list_inactive_instances.stdout_lines == "FAIL"
  when: startsap_input_sap_instance_nr is defined

- name: Set variable for active SAP instance
  set_fact:
    startsap_list_instances_to_start:  "{{ startsap_output_list_inactive_instances.stdout_lines }}"
  when:  startsap_input_sap_instance_nr is defined
  
- name: Get list of active SAP instances
  shell: "{{ startsap_dir_sapctrl_managednode }}/sapcontrol -nr {{ startsap_input_sap_sid_profile.stdout.split()[2] }} -function GetSystemInstanceList | grep -i gray | sort -k 5n | cat"
  environment:
    LIBPATH: "{{ startsap_dir_sapctrl_managednode }}"
  register: startsap_output_list_inactive_instances
  when:  startsap_input_sap_instance_nr is undefined
  
- name: Set variable for active SAP instance
  set_fact:
    startsap_list_instances_to_start:  "{{ startsap_output_list_inactive_instances.stdout_lines }}"
  when:  startsap_input_sap_instance_nr is undefined

- name: Error, if SAP instance is not active
  fail:
    msg: "Error: No SAP instances found for SAP system {{ startsap_input_sap_sid }}"
  failed_when: startsap_list_instances_to_start == ""
  when:  startsap_input_sap_instance_nr is undefined

- name: Error if connection to sapstartsrv failed
  fail:
    msg: "GetSystemInstanceList Fail: NIECONN_REFUSED (Connection refused)"
  failed_when: startsap_list_instances_to_start == "FAIL"
  when:  startsap_input_sap_instance_nr is undefined

######################################################
# Display SAP start commands
######################################################

- name: Show start SAP instance command
  debug:
    msg: "SAP start command - {{ startsap_dir_sapctrl_managednode }}/sapcontrol -nr {{ startsap_input_sap_sid_profile.stdout.split()[2] }} -function InstanceStart {{ item.split()[0]|replace(',', '') }} {{  startsap_input_sap_instance_nr | default(item.split()[1]|replace(',', '')) }}"
  with_items: "{{ startsap_list_instances_to_start }}"
  when:  startsap_input_sap_instance_nr is defined

- name: Show start SAP instance command for all instances
  debug:
    msg: "SAP start command - {{ startsap_dir_sapctrl_managednode }}/sapcontrol -nr {{ startsap_input_sap_sid_profile.stdout.split()[2] }} -function InstanceStart {{ item.split()[0]|replace(',', '') }} {{ item.split()[1]|replace(',', '') }}"
  with_items: "{{ startsap_list_instances_to_start }}"
  when:  startsap_input_sap_instance_nr is undefined
