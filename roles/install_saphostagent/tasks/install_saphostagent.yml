---
#   Copyright 2021 IBM Corporation
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

###########################################
# tasks file for install_saphostagent
###########################################

###########################################
# Prepare target temp dir
############################################

- name: Ensure directory {{ sap_hostagent_agent_tmp_directory }} exists
  file:
    path: "{{ sap_hostagent_agent_tmp_directory }}"
    state: directory
    mode: '0755'

#####################################################
# Check SAPHOSTAGENT file
#####################################################

- name: Collect downloaded SAPHOSTAGENT files from {{ sap_hostagent_download_local_path }} directory
  find:
    paths: "{{ sap_hostagent_download_local_path }}"
    patterns: "*.SAR,*.sar"
  register: sap_hostagent_sar_file_name_found
  when: sap_hostagent_sar_file_name is undefined

- name: Check downloaded SAPHOSTAGENT file(s) found in {{ sap_hostagent_download_local_path }} directory
  fail:
    msg: "Error: No SAPHOSTAGENT SAR file(s) found in {{ sap_hostagent_download_local_path }} directory"
  when: sap_hostagent_sar_file_name is undefined and sap_hostagent_sar_file_name_found.files|length == 0

- name: Get last downloaded SAPHOSTAGENT file
  ansible.builtin.set_fact:
    sap_hostagent_sar_file: "{{ sap_hostagent_sar_file_name_found.files | sort(attribute='path') | last }}"
  when: sap_hostagent_sar_file_name is undefined

- name: Set SAPHOSTAGENT filename variable
  ansible.builtin.set_fact:
    sap_hostagent_sar_file_name: "{{ sap_hostagent_sar_file.path | basename }}"
  when: sap_hostagent_sar_file_name is undefined

- name: Check SAPHOSTAGENT file {{ sap_hostagent_sar_file_name }}
  fail:
    msg: "Error: SAPHOSTAGENT not found"
  when: sap_hostagent_sar_file_name == ""

- name: Copy SAR based SAPHOSTAGENT [{{ sap_hostagent_sar_file_name }}] to the {{ sap_hostagent_agent_tmp_directory }} folder
  copy:
    src: "{{ sap_hostagent_download_local_path }}/{{ sap_hostagent_sar_file_name }}"
    dest: "{{ sap_hostagent_agent_tmp_directory }}/{{ sap_hostagent_sar_file_name }}"
    remote_src: yes

#########################################################
# Check SAPCAR
#########################################################

### Workflow:
###   SAPCAR:
###   Check SAPCAR (sap_hostagent_sapcar_file_name)
###    -   in sap_hostagent_download_local_path -> use it
###    -   available in sap_hostagent_download_local_path
###        available in sap_sapcar_local_path_default -> use it
###    -   available in both dir -> end playbook

- name: Check SAPCAR in {{ sap_hostagent_download_local_path }} folder
  ansible.builtin.stat:
    path: "{{ sap_hostagent_download_local_path }}/{{ sap_hostagent_sapcar_file_name }}"
  register: stat_result

- name: Set SAPCAR path variable
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_hostagent_download_local_path }}"
  when: ( stat_result.stat.exists == true ) and ( stat_result.stat.executable == true )


- name: Check SAPCAR in {{ sap_sapcar_local_path_default }} folder
  ansible.builtin.stat:
    path: "{{ sap_sapcar_local_path_default }}/{{ sap_hostagent_sapcar_file_name }}"
  register: stat_result
  when: sap_sapcar_local_path is undefined

- name: Set SAPCAR path variable to default
  ansible.builtin.set_fact:
    sap_sapcar_local_path: "{{ sap_sapcar_local_path_default }}"
  when: ( sap_sapcar_local_path is undefined ) and ( stat_result.stat.exists == true ) and ( stat_result.stat.executable == true )


- name: Terminate if SAPCAR file not found
  fail:
    msg: "Error: {{ sap_hostagent_sapcar_file_name }} not found, neither in {{ sap_hostagent_download_local_path }}, nor in {{ sap_sapcar_local_path_default }}"
  when: sap_sapcar_local_path is undefined


######################################################
# Extract and install SAPHOSTAGENT on target host
#######################################################

- name: Extract the SAPHOSTAGENT archive using SAPCAR
  command: >-
    {{ sap_sapcar_local_path }}/{{ sap_hostagent_sapcar_file_name }} \
    -xvf {{ sap_hostagent_agent_tmp_directory }}/{{ sap_hostagent_sar_file_name }} -manifest SIGNATURE.SMF
  register: extractagent
  args:
    chdir: "{{ sap_hostagent_agent_tmp_directory }}"
  changed_when: "'SAPCAR: processing archive' in extractagent.stdout"

- name: Prepare SAPHOSTAGENT install command argument
  ansible.builtin.set_fact:
    sap_hostagent_agent_command_args: "-gid {{ sap_gid }}"
  when:
    - sap_gid is defined
    - sap_r3group_check.stderr != ""

- name: Install SAPHOSTAGENT with command argument {{ sap_hostagent_agent_command_args }}
  command: "{{ sap_hostagent_agent_tmp_directory }}/saphostexec -install {{ sap_hostagent_agent_command_args }}"
  register: installagent
  args:
    chdir: "{{ sap_hostagent_agent_tmp_directory }}"
  changed_when: "'Install service' in installagent.stdout"

- name: Ensure {{ sap_hostagent_agent_tmp_directory }} directory is removed from {{ inventory_hostname }}
  file:
    path: "{{ sap_hostagent_agent_tmp_directory }}"
    state: absent
    mode: '0755'
  when: sap_hostagent_clean_tmp_directory

